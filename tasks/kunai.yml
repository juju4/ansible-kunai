---

- name: Import Github repo release download
  ansible.builtin.import_tasks: github-repo-download.yml
  vars:
    gh_repo: "{{ kunai_repo }}"
    gh_release: "{{ kunai_release }}"
    gh_json_query: "assets[?ends_with(browser_download_url, '-{{ kunai_arch }}')].browser_download_url"
    gh_mode: '0755'

- name: Install
  block:
    - name: Install kunai
      ansible.builtin.command:
        cmd: "{{ install_archives }}/{{ gh_dl_url | basename }} install --systemd {{ kunai_install_args }}"
      args:
        creates: "{% if not kunai_force_update | bool %}/usr/bin/kunai{% else %}{{ omit }}{% endif %}"
      notify:
        - Reload systemd
        - Restart kunai
  rescue:
    # else 'Error: Text file busy (os error 26)'
    - name: Stop kunai before updating
      ansible.builtin.service:
        name: 00-kunai
        state: stopped
      when:
        - not is_container|bool
    - name: Install kunai
      ansible.builtin.command:
        cmd: "{{ install_archives }}/{{ gh_dl_url | basename }} install --systemd {{ kunai_install_args }}"
      args:
        creates: "{% if not kunai_force_update | bool %}/usr/bin/kunai{% else %}{{ omit }}{% endif %}"
      notify:
        - Reload systemd
        - Restart kunai
    - name: Start kunai after updating
      ansible.builtin.service:
        name: 00-kunai
        state: started
      when:
        - not is_container|bool

- name: Ensure yamllint package is present for base validation
  ansible.builtin.package:
    name: yamllint
    state: present

- name: Configure kunai templates
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/kunai/{{ item | basename }}"
    mode: '0600'
    owner: root
    group: root
    validate: 'yamllint %s'
  loop: "{{ kunai_rules_templates + kunai_ioc_templates + kunai_yara_templates }}"
  notify:
    - Restart kunai

- name: Dump kunai config if does not exist
  ansible.builtin.shell:
    cmd: "kunai config --dump > /etc/kunai/config.yaml"
  args:
    creates: /etc/kunai/config.yaml

- name: Retrieve kunai config
  ansible.builtin.command:
    cmd: "cat /etc/kunai/config.yaml"
  register: kunai_cfg
  changed_when: false

- name: Merge kunai config
  ansible.builtin.copy:
    content: "{{ kunai_cfg.stdout | from_yaml | ansible.builtin.combine(kunai_config_yaml_extras, recursive=true) | to_nice_yaml(indent=2) }}"
    dest: /etc/kunai/config.yaml
    mode: '0600'
    validate: 'yamllint %s'
  when:
    - kunai_config_yaml_extras != None
    - kunai_config_yaml_extras | length > 0
  notify:
    - Restart kunai

- name: Ensure kunai service is enabled and started
  ansible.builtin.service:
    name: 00-kunai
    state: started
    enabled: yes
  when:
    - not is_container|bool
