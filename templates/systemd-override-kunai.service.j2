{{ ansible_managed | comment }}

#
# /etc/systemd/system/00-kunai.service.d/hardening.conf
#
[Service]
{% if kunai_env_debug | bool %}
Environment=RUST_BACKTRACE=full
{% endif %}
# Hardening
# Exposure score 9.5 -> 2.6
# Warning! Test to your context
NoNewPrivileges=yes
PrivateTmp=true
ProtectHome=true
ProtectSystem=true
ProtectProc=noaccess
# "Error: cannot find mnt namespace of kunai: No such file or directory (os error 2)"
# InaccessiblePaths=/proc
PrivateDevices=yes
UMask=077
# ReadWritePaths=/var/log/kunai
# ReadOnlyPaths=
ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectKernelLogs=yes
# ProtectHostname=yes
ProtectClock=yes
ProtectControlGroups=true
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes

PrivateNetwork=yes
# RestrictAddressFamilies=
RestrictAddressFamilies=~AF_INET AF_INET6 AF_UNIX AF_NETLINK AF_PACKET

IPAccounting=yes
IPAddressAllow=localhost link-local
# IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16
# IPAddressDeny=

# https://discuss.elastic.co/t/i-use-kubernetes-to-run-es-the-container-can-not-run-and-i-get-the-error-bootstrap-checks-failed-1-memory-locking-requested-for-elasticsearch-process-but-memory-is-not-locked/90786
AmbientCapabilities=CAP_BPF CAP_PERFMON CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
# CapabilityBoundingSet=~CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_SYS_RAWIO
# "Error: procfs: Internal error: bug at /home/quentin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/procfs-0.16.0/src/process/namespaces.rs:33 (please report this procfs bug)"
# "Internal Unwrap Error: Unable to stat "/proc/1/ns/net"
# CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_SYS_NICE
# CapabilityBoundingSet=~CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN

{% if not (ansible_virtualization_type is defined and
          ansible_virtualization_type == "docker"
        )
%}
# Error: map error: failed to create map `BPF_PROG_TRACK` with code -1
# Error: map error: failed to create map `KUNAI_EVENTS` with code -1
#  called `Result::unwrap()` on an `Err` value: OpenError { io_error: Os { code: 1, kind: PermissionDenied, message: "Operation not permitted" } }
# cannot open perf event buffer: OpenError { io_error: Os { code: 13, kind: PermissionDenied, message: "Permission denied" } } => @debug for perf_event_open
#  https://systemd.io/CGROUP_DELEGATION/
SystemCallFilter=@system-service @privileged @debug
SystemCallFilter=~@clock @cpu-emulation @module @mount @obsolete @raw-io @reboot @resources @swap
SystemCallArchitectures=native
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
{% endif %}

{% if kunai_cgroups_restriction_enable is defined and kunai_cgroups_restriction_enable | bool %}
CPUWeight={{ kunai_cgroups_cpushares | default('60') }}
CPUQuota={{ kunai_cgroups_cpuquota | default('60%') }}
MemoryMax={{ kunai_cgroups_memorylimit | default('4G') }}
IOWeight={{ kunai_cgroups_cpushares | default('60') }}
{% endif %}

[Install]
WantedBy=default.target
